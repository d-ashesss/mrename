// Code generated by mockery v3.0.0-alpha.0. DO NOT EDIT.

package mocks

import (
	file "github.com/d-ashesss/mrename/file"
	mock "github.com/stretchr/testify/mock"
)

// Source is an autogenerated mock type for the Source type
type Source struct {
	mock.Mock
}

// GetFiles provides a mock function with given fields:
func (_m *Source) GetFiles() ([]file.Info, error) {
	ret := _m.Called()

	var r0 []file.Info
	if rf, ok := ret.Get(0).(func() []file.Info); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]file.Info)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSource interface {
	mock.TestingT
	Cleanup(func())
}

// NewSource creates a new instance of Source. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSource(t mockConstructorTestingTNewSource) *Source {
	mock := &Source{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
